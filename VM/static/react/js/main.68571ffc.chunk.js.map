{"version":3,"sources":["utils.js","AddApi.js","NewApiStep.js","Landing.js","ViewApiHeader.js","CurrentRouteGroupsListItem.js","AttributeListItem.js","AttributeList.js","Modal.js","CurrentRouteGroupsList.js","CurrentRouteGroups.js","ViewApiBody.js","ViewApiFooter.js","ViewApi.js","LogoImage.js","LogoText.js","BlogLink.js","TutorialLink.js","AllAPIsLink.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["grabFakeUser","a","fetch","method","headers","catch","err","console","log","request","status","json","data","localStorage","validateUser","body","JSON","stringify","userId","resStream","variableHandling","name","type","modified","trim","replace","word","index","toUpperCase","apiName","setApiName","setApiNameOnClick","textFieldId","useId","useState","newApiName","setNewApiName","className","Label","htmlFor","id","value","onChange","e","target","placeholder","required","PrimaryButton","onClick","modifiedVariable","Image","src","alt","width","initializeIcons","IconButton","styles","root","marginTop","marginLeft","icon","fontSize","iconProps","iconName","title","prompt","modifiedNewApiName","ariaLabel","onRouteGroupDelete","setRGName","setId","RGName","setData","showModal","menuProps","items","key","text","RGTextOnClick","directionalHintFixed","Stack","tokens","childrenGap","flexDirection","Card","aria-label","maxWidth","justifyContent","marginBottom","horizontal","childrenMargin","Item","Text","cursor","marginRight","deleteAttributeButtonOnClick","onChangeAttribute","disabled","inputVal","setInputVal","inputType","setInputType","useEffect","defaultProps","defaultSelectedKey","Dropdown","options","dropdown","selectedKey","attributeListItemArr","addAttributeButtonOnClick","attrArr","Object","keys","map","attr","style","overflowY","maxHeight","allowDisabledFocus","cancelIcon","hideModal","isModalOpen","onRouteGroupNameChange","findStartCount","arrOfStrings","arrOfNumbers","ele","Number","Math","max","count","setCount","deletedAttr","setDeletedAttr","modalRGName","setModalRGName","setAttributeListItemArr","startingCount","Infinity","titleId","theme","getTheme","contentStyles","mergeStyleSets","container","display","flexFlow","alignItems","header","fonts","xLargePlus","flex","borderTop","palette","themePrimary","color","neutralPrimary","fontWeight","FontWeights","semibold","padding","selectors","p","margin","footer","iconButtonStyles","rootHovered","neutralDark","onClickModalSave","rgName","getItem","modifiedRgName","updatedRouteGroup","objectId","axios","post","addedRG","addedRGID","Modal","titleAriaId","isOpen","onDismiss","isBlocking","containerClassName","dragOptions","AttributeList","attributeListItemArrClone","parse","prevState","DefaultButton","arrayOfRouteGroups","useBoolean","setTrue","setFalse","newRGCounter","setNewRGCounter","itemArrInfo","routeGroup","attributes","objectName","height","output","setOutput","ChoiceGroup","option","serverType","XMLHttpRequest","open","setRequestHeader","jsonData","onload","fileName","responseText","api_name","currentURL","window","location","href","currentURLlastChar","length","downloadLink","substr","alert","onerror","send","generateFullAPI","ViewApiHeader","class","frameborder","allow","allowfullscreen","LogoImage","LogoText","BlogLink","TutorialLink","AllAPIsLink","App","setArrayOfRouteGroups","isLoading","setIsLoading","routes","currentApiName","groups","fetchRouteGroups","renderedPage","RG","arrayOfRGClone","slice","foundRG","forEach","deletedRGInArray","filter","currentRoute","currentRouteId","ViewApi","Landing","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"js/main.68571ffc.chunk.js","sourcesContent":["// Populate the groups on the main page\nexport function getGroups() {\n  var groupList = document.querySelector('#route-collection');\n\n  var request = new XMLHttpRequest();\n  request.open('POST', '/viewAvailableRouteGroups', true);\n  request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n\n  request.onload = function() {\n    if (request.status >= 200 && request.status < 400) {\n      // Success!\n      var data = JSON.parse(request.responseText);\n      const groups = data['groups'];\n      var outputHtml = '';\n      for (var group in groups) {\n        outputHtml += '<div class=\"expand-route-link\">';\n        outputHtml +=\n          '<p>' +\n          Object.values(groups[group]) +\n          ' ' +\n          Object.keys(groups[group]);\n        outputHtml += `<button id=${Object.keys(\n          groups[group]\n        )} onclick='deleteRouteGroup(this.id)'>Delete </button>`;\n        outputHtml += '</p>';\n        outputHtml += '</div>\\n';\n      }\n\n      outputHtml +=\n        '<button class=\"pure-button pure-button-primary\">+ Add More</button>';\n\n      groupList.innerHTML = outputHtml;\n\n      // TODO: This needs to be an awaitable in the future\n      document\n        .querySelector('#route-collection > .pure-button')\n        .addEventListener('click', moveToObjectCreation, false);\n    } else {\n      // We reached our target server, but it returned an error\n    }\n  };\n\n  request.onerror = function() {\n    // There was a connection error of some sort\n  };\n\n  var jsonData = { userId: localStorage['userId'] };\n\n  request.send(JSON.stringify(jsonData));\n}\n\nexport async function deleteRouteGroup(objectId) {\n  await fetch(`/deleteRouteGroup`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      userId: localStorage['userId'],\n      objectId: objectId,\n    }),\n  }).catch((err) => {\n    console.log('Error:', err);\n    return false;\n  });\n}\n\nexport async function getRouteGroup(objectId) {\n  let response = await fetch(`/getRouteGroup`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      userId: localStorage['userId'],\n      objectId: objectId,\n    }),\n  }).catch((err) => {\n    console.log('Error:', err);\n    return false;\n  });\n\n  let resStream = response.json();\n  return resStream;\n}\n\n/*\nEXAMPLE of updatedRouteGroup: {\"userId\":\"7019\", \"objectName\": \"randomName\", \"apiId\": \"0\", \"isCRUD\":true, \"isReadMultiple\":false, \"isSingleRoute\":true}\n*/\nexport async function updateRouteGroup(objectId, updatedRouteGroup) {\n  let resStream = await fetch(`/updateRouteGroup`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ updatedRouteGroup, objectId }),\n  }).catch((err) => {\n    console.log('Error:', err);\n    return false;\n  });\n  if (resStream.status === 200) {\n    return true;\n  }\n  return false;\n}\n\nexport function addGroupRoute() {\n  // initialize request\n  var request = new XMLHttpRequest();\n  request.open('POST', '/addNewRouteGroup');\n  request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n\n  // form the request json\n  var data = {\n    userId: localStorage['userId'],\n    objectName: variableHandling(\n      document.querySelector('#object-name').value,\n      'class'\n    ),\n    apiId: 0, //TO DO: Match routegroup apiId with proper apiId when multiple APIs exist\n    isCRUD: document.querySelector('#crud-bool').innerText == 'Yes',\n    isReadMultiple:\n      document.querySelector('#read-multiple-bool').innerText == 'Yes',\n    isReadAllObjects:\n      document.querySelector('#read-objects-bool').innerText == 'Yes',\n    isSingleRoute:\n      document.querySelector('#single-route-bool').innerText == 'Yes',\n  };\n\n  request.onload = function() {\n    if (request.status >= 200 && request.status < 400) {\n      // Success!\n      var data = JSON.parse(request.responseText);\n      const objectId = data['objectId'];\n      console.log(objectId);\n\n      // Store the new objectId in cache\n      localStorage['currentObjectId'] = objectId;\n\n      // Move the page to defining the attributes\n      moveToObjectAttributeCreation();\n    } else {\n      // We reached our target server, but it returned an error\n      alert('Enter an Object Name!');\n    }\n  };\n\n  request.onerror = function() {\n    // There was a connection error of some sort\n  };\n\n  request.send(JSON.stringify(data));\n}\n\nexport async function getObjectAttributes(objectId) {\n  let response = await fetch(`/getObjectAttributes`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      userId: localStorage['userId'],\n      objectId: objectId,\n    }),\n  }).catch((err) => {\n    console.log('Error:', err);\n    return false;\n  });\n\n  let resStream = response.json();\n  return resStream;\n}\n\nexport async function deleteObjectAttribute(attributeId) {\n  await fetch(`/deleteObjectAttribute`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ userId: localStorage['userId'], attributeId }),\n  }).catch((err) => {\n    console.log('Error:', err);\n    return false;\n  });\n}\n\n/*\nEXAMPLE of updatedObjectAttribute: {\"name\": \"randomName\", \"type\": \"number\", \"description\":\"a new one\", \"isUnique\":true, \"isEncrypted\":true, \"generationMethod\": \"\", \"isNullable\": false}\n*/\nexport async function updateObjectAttribute(\n  attributeId,\n  updatedObjectAttribute\n) {\n  let resStream = await fetch(`/updateObjectAttribute`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      updatedObjectAttribute,\n      attributeId,\n      userId: localStorage['userId'],\n    }),\n  }).catch((err) => {\n    console.log('Error:', err);\n    return false;\n  });\n  if (resStream.status === 200) {\n    return true;\n  }\n  return false;\n}\n\nexport function flipBoolButton(event) {\n  console.log(event);\n  if (event.srcElement.innerText == 'Yes') {\n    event.srcElement.className = 'bool-button pure-u-1-3 pure-button';\n    event.srcElement.innerHTML = 'No';\n  } else {\n    event.srcElement.className =\n      'bool-button pure-u-1-3 pure-button pure-button-active';\n    event.srcElement.innerHTML = 'Yes';\n  }\n}\n\nlet isDropdownFocused = false;\nlet attrNumber = 0;\nexport function addAdditionalAttributeSpace() {\n  attrNumber++;\n  const additionalAttrSection = `\n<tr>\n    <td>\n        <input id=\"attr-text-field${attrNumber}\" class=\"attribute-name\" type=\"text\" value=\"\" />\n    </td>\n    <td>\n        <form class=\"pure-form pure-form-stacked\">\n            <select class=\"type\" id=\"dropdown${attrNumber}\" >\n                <option>number</option>\n                <option>decimal</option>\n                <option>word(s)</option>\n                <option>true / false</option>\n                <option>date and time</option>\n            </select>\n        </form>\n    </td>\n</tr>\n`;\n\n  var tableToAppend = document.querySelector('.object-attribute-table');\n  var newRow = tableToAppend.insertRow(-1);\n  newRow.innerHTML += '\\n' + additionalAttrSection;\n  document.querySelector(`#attr-text-field${attrNumber}`).focus();\n  let dropdowns = document.querySelectorAll('.type');\n  for (let i = 0; i < dropdowns.length; i++) {\n    dropdowns[i].removeAttribute('onfocus');\n    dropdowns[i].removeAttribute('onblur');\n  }\n\n  document\n    .querySelector(`#dropdown${attrNumber}`)\n    .setAttribute('onfocus', 'isDropdownFocused=true');\n  document\n    .querySelector(`#dropdown${attrNumber}`)\n    .setAttribute('onblur', 'isDropdownFocused=false');\n}\n\n// export function generateAPI() {\n//   var request = new XMLHttpRequest();\n//   request.open('POST', '/addObjectAttributes');\n//   request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n//   // form the request request json\n\n//   // Set up iteration on each row of the table\n//   var attributeList = [];\n//   var attributeRows = document.querySelectorAll('.object-attribute-table > tr');\n//   for (var row of attributeRows) {\n//     var typeElement = row.querySelector('td > form > select');\n//     var yesNoElements = row.querySelectorAll('td > form > .affirm');\n//     var generationElement = row.querySelector('td > form > .generation-types');\n\n//     // add row to json object\n//     attributeList.push({\n//       name: variableHandling(\n//         row.querySelector('td > .attribute-name').value,\n//         'var'\n//       ),\n//       type: typeElement.options[typeElement.selectedIndex].value,\n//       description: '', //row.querySelector('td > textarea').value,\n//       isUnique: false, //yesNoElements[1].checked,\n//       isEncrypted: false, //yesNoElements[2].checked,\n//       generationMethod: '', //generationElement.options[generationElement.selectedIndex].value,\n//       isNullable: false, //yesNoElements[0].checked,\n//     });\n//   }\n\n//   var jsonData = {\n//     userId: localStorage['userId'],\n//     objectId: localStorage['currentObjectId'],\n//     attributes: attributeList,\n//   };\n\n//   console.log(jsonData);\n\n//   request.onload = function() {\n//     if (request.status >= 200 && request.status < 400) {\n//       // Success!\n//       var data = JSON.parse(request.responseText);\n//       const attributeIds = data['attributeId'];\n//       // Move to displaying the routes that just got generated\n//       moveToRouteDisplay(objectId);\n//     } else {\n//       // We reached our target server, but it returned an error\n//       alert('Enter all attribute names!');\n//     }\n//   };\n\n//   request.onerror = function() {\n//     // There was a connection error of some sort\n//   };\n//   request.send(JSON.stringify(jsonData));\n// }\n\nexport function pullGeneratedRoutes(objectId) {\n  var request = new XMLHttpRequest();\n  request.open('POST', '/showObjectRoutes');\n  request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n  // form the request request json\n  var jsonData = {\n    userId: localStorage['userId'],\n    objectId: objectId,\n  };\n\n  request.onload = function() {\n    if (request.status >= 200 && request.status < 400) {\n      // Success!\n      var data = JSON.parse(request.responseText);\n      console.log(data);\n\n      var routeHTML = '';\n      for (var route in data['routes']) {\n        routeHTML += `<div class=\"pure-g\">\n                            <h3 class=\"pure-u-1 route\">`;\n        routeHTML += '\\n' + data['routes'][route] + '\\n';\n        routeHTML += `</h3>\n                        </div>`;\n      }\n\n      document.querySelector('#generated-routes').innerHTML = routeHTML;\n    } else {\n      // We reached our target server, but it returned an error\n    }\n  };\n\n  request.onerror = function() {\n    // There was a connection error of some sort\n  };\n\n  request.send(JSON.stringify(jsonData));\n}\n\nexport function moveToObjectCreation() {\n  page = 'objectCreation';\n  console.log('moving to object creation');\n  document.querySelector('#current-route-groups').setAttribute('hidden', '');\n  document.querySelector('#create-object-name-span').removeAttribute('hidden');\n  document.querySelector('#object-name').focus();\n}\n\nexport function moveToObjectAttributeCreation() {\n  page = 'attrCreation';\n  console.log('moving to object attribute creation');\n  document.querySelector('#create-object-name-span').setAttribute('hidden', '');\n  document\n    .querySelector('#define-object-attributes-span')\n    .removeAttribute('hidden');\n  addAdditionalAttributeSpace();\n}\n\nexport function moveToObjectAttributeCreationFromGenRoutes() {\n  console.log(\n    'moving back to object attribute creation after generated routes'\n  );\n  document.querySelector('#object-routes-view-span').setAttribute('hidden', '');\n  document\n    .querySelector('#define-object-attributes-span')\n    .removeAttribute('hidden');\n}\n\nexport function moveToRouteDisplay(objectId) {\n  page = 'routeDisplay';\n  pullGeneratedRoutes(objectId);\n  console.log('moving to object route display / post api generation');\n  document\n    .querySelector('#define-object-attributes-span')\n    .setAttribute('hidden', '');\n  document.querySelector('#object-routes-view-span').removeAttribute('hidden');\n}\n\nexport async function grabFakeUser() {\n  let request = await fetch(`/grabFakeUser`, {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n  }).catch((err) => {\n    console.log('Error:', err);\n    return false;\n  });\n  if (request.status >= 200 && request.status < 400) {\n    // Success!\n    var data = await request.json();\n    console.log(data);\n\n    localStorage['userId'] = data['id'];\n  } else {\n    // We reached our target server, but it returned an error\n  }\n}\n\nexport function setAPIName() {\n  var request = new XMLHttpRequest();\n  request.open('POST', '/setAPIName');\n  request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n  // form the request request json\n\n  var jsonData = {\n    userId: localStorage['userId'],\n    apiName: document.querySelector('#api-name').value,\n  };\n\n  console.log(jsonData);\n\n  request.onload = function() {\n    if (request.status >= 200 && request.status < 400) {\n      var data = JSON.parse(request.responseText);\n      var api_name = data['api_name'];\n\n      document.querySelector('#api_names').innerHTML = api_name;\n    } else {\n      // We reached our target server, but it returned an error\n    }\n  };\n\n  request.onerror = function() {\n    // There was a connection error of some sort\n  };\n\n  request.send(JSON.stringify(jsonData));\n}\n\nexport function generateFullAPI(serverType) {\n  var request = new XMLHttpRequest();\n  request.open('POST', '/generateFullAPI');\n  request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n  // form the request request json\n\n  var jsonData = {\n    userId: localStorage['userId'],\n    output: serverType,\n  };\n\n  console.log(jsonData);\n\n  request.onload = function() {\n    if (request.status >= 200 && request.status < 400) {\n      // Success!\n\n      var data = JSON.parse(request.responseText);\n      const fileName = data.api_name + '.zip';\n\n      let currentURL = window.location.href;\n      // if currentURL has an extra '?' at the end, have to trim the end\n      // else we keep the currentURL\n      const currentURLlastChar = currentURL[currentURL.length - 1]; \n      const trimmedURL =\n        (currentURLlastChar === '?' || currentURLlastChar === \"#\")\n          ? currentURL.substr(0, currentURL.length - 1)\n          : currentURL;\n      const downloadLink = trimmedURL + 'get-compress/' + fileName;\n      window.location.href = downloadLink;\n\n      // var port_number = data['port_number'];\n      // var app_uuid = data['app_uuid'];\n\n      // document.querySelector('#port_numbers').innerHTML = port_number;\n      // document.querySelector('#app_uuid').innerHTML = app_uuid;\n    } else {\n      // We reached our target server, but it returned an error\n\n      //assuming error must be because an objectId has not been created yet, throwing the badParams\n      alert('API must have routes created before generating!');\n    }\n  };\n\n  request.onerror = function() {\n    // There was a connection error of some sort\n  };\n\n  request.send(JSON.stringify(jsonData));\n}\n\nexport async function validateUser() {\n  let resStream = await fetch(`/isValidUser`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ userId: localStorage['userId'] }),\n  }).catch((err) => {\n    console.log('Error:', err);\n    return false;\n  });\n  return resStream.status === 200;\n}\n\nlet page = 'landing';\nexport function nextPage() {\n  if (page === 'landing') moveToObjectCreation();\n  else if (page === 'objectCreation') addGroupRoute();\n  //   else if (page === 'attrCreation') generateAPI();\n  else if (page === 'routeDisplay') window.location.href = '/';\n}\n\nexport function pascalCase(str) {\n  // first parse through the string to separate out words, and capitalize the first letter in each found word\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n      return word.toUpperCase();\n    })\n    .replace(/\\s+/g, ''); // now remove the white space\n}\n\nexport function variableHandling(name, type) {\n  var modified = name;\n\n  // handle leading/trailing whitespace\n  modified = modified.trim();\n\n  // first check for illegal characters\n  modified = modified.replace(/[^A-Za-z_\\s0-9]/g, '');\n\n  // now check the first character of the proposed name and add underscore if illegal\n  modified = modified.replace(/^[0-9]/, '_' + modified[0]);\n\n  // depending on the type of the variable, convert to either PascalCase or snake_case\n  if (type === 'class') {\n    modified = pascalCase(modified);\n  } else {\n    modified = modified.replace(/[\\s]/g, '_');\n  }\n\n  return modified;\n}\n\nexport function test2() {\n  console.log('YO YOU CLICKED ME');\n}\n\n// window.onload = async function() {\n//     // Don't have a login process yet. Just set the user id\n//     // TODO: put login in code here instead\n//     // localStorage['userId'] = 1;\n//     // Add an await here\n//     if(!await validateUser()){\n//         await grabFakeUser();\n//     }\n//     console.log(localStorage['userId'])\n\n//     // Fill in the main page with current groups for account\n//     getGroups();\n\n//     // set event listeners on flip bool buttons\n//     var boolButtons = document.querySelectorAll('.bool-button');\n//     for (var button of boolButtons)\n//     {\n//         button.addEventListener('click', flipBoolButton, false);\n//     }\n\n//     //keycode 13 is ENTER key\n//     document.querySelector(\"body\").addEventListener(\"keydown\", e=>{\n//       if (e.ctrlKey && e.keyCode === 13) nextPage();\n//     })\n\n//     //keycode 9 is TAB key\n//     document.querySelector(\"body\").addEventListener(\"keydown\", e=>{\n//       if (e.keyCode === 9 && isDropdownFocused===true && e.shiftKey===false){\n//         e.preventDefault()\n//         addAdditionalAttributeSpace();\n//       }\n//     })\n\n//     document.querySelector('#object-name').addEventListener('keydown', function(){\n//         var str = document.querySelector('#object-name').value;\n//         document.querySelector('#object-name').value = str.charAt(0).toUpperCase() + str.slice(1);\n//     }, false)\n\n//     document.querySelector('#object-name-form').addEventListener('submit', function(e){\n//       e.preventDefault()\n//       addGroupRoute()\n//     })\n\n//     document.querySelector('#goto-define-object > .pure-button').addEventListener('click', addGroupRoute, false);\n\n//     // add more space to add attributes button event listener\n//     document.querySelector('#add-attribute-button').addEventListener('click', addAdditionalAttributeSpace, false);\n\n//     // event listener to generate api button\n//     document.querySelector('#generate-api-button').addEventListener('click', generateAPI, false);\n\n//      // event listener to set api name button\n//      document.querySelector('#set-api-name-button').addEventListener('click', setAPIName, false);\n\n//     // event listener on edit object button on the generated routes page\n//     document.querySelector('#edit-object').addEventListener('click', moveToObjectAttributeCreationFromGenRoutes, false);\n\n//     // event listener on generate full api button\n//     document.querySelector('#generate-api > button').addEventListener('click', function(){generateFullAPI(\"Node\")}, false);\n// }\n","import React, {useState} from 'react';\nimport { Label, PrimaryButton } from '@fluentui/react';\nimport { useId } from '@uifabric/react-hooks';\nimport {variableHandling} from './utils'\nimport './componentCss/AddApi.css'\n\nexport default ({apiName ,setApiName, setApiNameOnClick}) => {\n    const textFieldId = useId('addApi');\n    const [newApiName, setNewApiName] = useState(\"\")\n\n    const startBuildingOnClick = () => {\n        const modifiedVariable = variableHandling(newApiName)\n        setApiName(modifiedVariable);\n        setApiNameOnClick(modifiedVariable) \n    }\n    return (\n        <div className='addApi'>\n            <Label className='addApiLabel' htmlFor={textFieldId}>Create a new API</Label>\n            <input id={textFieldId} className='addApiTextfield' value={newApiName} onChange={(e) => {setNewApiName(e.target.value)}} placeholder=\"Enter your API name\" required />\n            <PrimaryButton className='addApiButton' onClick={startBuildingOnClick}> Start Building </PrimaryButton>\n        </div>\n    );\n};\n","import React from 'react';\nimport {Label, Image} from \"@fluentui/react\"\nimport AddApi from './AddApi'\nimport './componentCss/NewApiStep.css'\n\nexport default ({apiName, setApiName, setApiNameOnClick}) => {\n    return(\n        <div>\n            <header className=\"stepOneHeader\">\n                <Label className=\"stepOneLabel\">Welcome to API Builder</Label>\n            </header>\n            <div className=\"stepOne\">\n                <Image \n                    src=\"static/react/images/step_1.png\"\n                    alt=\"Step One\"\n                    width={'30%'} \n                />\n                <div className=\"stepOneAddApi\">\n                    <AddApi apiName={apiName} setApiName={setApiName} setApiNameOnClick={setApiNameOnClick}/>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport NewApiStep from './NewApiStep'\n\nexport default ({apiName, setApiName, setApiNameOnClick}) => {\n  return (\n    <div>\n      <NewApiStep apiName={apiName} setApiName={setApiName} setApiNameOnClick={setApiNameOnClick}/>\n      </div>\n  );\n};\n","import React from 'react'\nimport {Label, IconButton, initializeIcons} from \"@fluentui/react\" \nimport {variableHandling} from './utils'\nimport './componentCss/viewApiHeader.css'\n\nexport default ({setApiNameOnClick,setApiName, apiName}) => {\n\n    initializeIcons('https://static2.sharepointonline.com/files/fabric/assets/icons/')\n\n    const emojiIcon = { iconName: 'Edit' };\n\n    const viewApiHeaderIconStyles = {\n        root: {\n            marginTop:'auto',\n            marginLeft: \"10px\"\n        },\n        icon: {\n            fontSize: \"30px\"\n        }\n    };\n\n    const changeAPINameOnClick = () => {\n        const newApiName = prompt(\"New Api Name\");\n        if(newApiName !== null){\n            const modifiedNewApiName = variableHandling(newApiName);\n            setApiName(modifiedNewApiName);\n            setApiNameOnClick(modifiedNewApiName);\n        }\n    }\n    return(\n        <header className=\"viewApiHeader\">\n            <div className=\"viewApiHeadDiv\">\n                <Label className=\"viewApiHeaderLabel\"><span className=\"viewApiHeaderLabelSpan\">{apiName}</span></Label>\n                <IconButton styles={viewApiHeaderIconStyles} iconProps={emojiIcon} title=\"Edit\" onClick={changeAPINameOnClick} ariaLabel=\"Edit\"/>\n            </div>\n        </header>\n    )\n}","import React from 'react';\nimport { Card} from '@uifabric/react-cards';\nimport { IconButton, Stack, Text, initializeIcons } from 'office-ui-fabric-react';\n\n\nexport default ({onRouteGroupDelete, setRGName, setId, id, RGName ,data, setData, showModal}) => {\n\n    initializeIcons('https://static2.sharepointonline.com/files/fabric/assets/icons/')\n    \n    const routeGroupStackStyles = {\n        root: {\n          flexDirection: \"row\",\n        },\n    };\n\n    const menuProps = {\n        items: [\n          {\n            key: 'editRG',\n            text: 'Edit Route Group',\n            iconProps: { iconName: 'Edit' },\n            onClick: () => {RGTextOnClick()}\n          },\n          {\n            key: 'deleteRG',\n            text: 'Delete Route Group',\n            iconProps: { iconName: 'Delete' },\n            onClick: () => {onRouteGroupDelete(RGName)}\n          },\n        ],\n        directionalHintFixed: true,\n    };\n    \n    const routeGroupCardStyles = {\n        root: {\n            width:'-webkit-fill-available',\n            maxWidth: \"none\",\n            justifyContent:\"space-between\",\n            marginTop: \"15px\",\n            marginBottom: \"15px\",\n        },\n    };\n    const routeGroupIconStyles = {\n        root: {\n            marginTop:'auto',\n            marginBottom: \"auto\",\n            marginRight:\"5px\",\n        },\n        icon: {\n            fontSize: \"20px\"\n        }\n    };\n    const routeGroupTextStyles = {\n        root: {\n            fontSize: '20px',\n            cursor: \"pointer\"\n        },\n    };\n\n    const sectionStackTokens = { childrenGap: 8 };\n    const cardTokens = { childrenMargin: 12 };\n\n    const RGTextOnClick = () => {\n        setData(data)\n        setRGName(RGName)\n        setId(id)\n        showModal();\n    }\n\n    return(\n        <div>\n            <Stack tokens={sectionStackTokens} styles={routeGroupStackStyles}>\n                <Card aria-label=\"Basic horizontal card\" styles= {routeGroupCardStyles} horizontal tokens={cardTokens}>\n                    <Card.Item>\n                        <Text styles={routeGroupTextStyles} onClick={RGTextOnClick}>{RGName}</Text>\n                    </Card.Item>\n                    <IconButton menuProps={menuProps}  styles={routeGroupIconStyles} title=\"Options\" ariaLabel=\"Options\" />\n                </Card>\n            </Stack>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport {Dropdown, IconButton, initializeIcons} from '@fluentui/react'\nimport './componentCss/AttributeListItem.css'\n\nexport default ({id, name, type, deleteAttributeButtonOnClick, onChangeAttribute, disabled}) => {\n    initializeIcons('https://static2.sharepointonline.com/files/fabric/assets/icons/')\n    const [inputVal, setInputVal] = useState(name)\n    const [inputType, setInputType] = useState(type)\n\n    useEffect( () => {\n        setInputVal(name)\n    }, [name])\n\n    const options = [\n        { key: 'number', text: 'number' },\n        { key: 'decimal', text: 'decimal' },\n        { key: 'word(s)', text: 'word(s)'},\n        { key: 'true / false', text: 'true / false' },\n        { key: 'date and time', text: 'date and time' },\n    ];\n\n    let defaultProps = {\n        defaultSelectedKey : type\n    }\n    if(type === ''){\n        defaultProps = {}\n    }\n\n    const deleteIcon = { iconName: 'Delete' };\n\n    const iconStyles = {\n        icon: {\n          fontSize: \"20px\",\n        },\n      };\n    const dropdownStyles = {\n        dropdown: { width: 300, fontSize:\"20px\" },\n    };\n\n    return (\n        <div className=\"attributeListItemMainDiv\">\n            <input type=\"text\" className=\"attributeListItemInput\" name=\"attributeName\" disabled={disabled} placeholder=\"Enter Attribute Name\" value={inputVal} onChange= {(e) => {\n                setInputVal(e.target.value)\n                onChangeAttribute(id, e.target.value, inputType)}\n                } />\n            <div className=\"attributeListItemDropdownDiv\">\n                <Dropdown\n                    placeholder=\"Type\"\n                    {...defaultProps}\n                    options={options}\n                    styles={dropdownStyles}\n                    onChange={(e, selectedKey) => {\n                        setInputType(selectedKey.key)\n                        onChangeAttribute(id, inputVal,selectedKey.key)\n                    }}\n                    disabled={disabled}\n                />\n                <IconButton iconProps={deleteIcon} styles={iconStyles} title=\"Delete\" ariaLabel=\"Delete\" disabled={disabled} onClick={(e) => {deleteAttributeButtonOnClick(id)}}/>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport AttributeListItem from './AttributeListItem'\nimport {PrimaryButton} from '@fluentui/react'\nimport './componentCss/Modal.css'\n\nexport default ({ attributeListItemArr, addAttributeButtonOnClick, deleteAttributeButtonOnClick, onChangeAttribute}) => {\n    const attrArr = Object.keys(attributeListItemArr).map((attr) => {\n        const name = attributeListItemArr[attr].name;\n        const type = attributeListItemArr[attr].type; \n        return <AttributeListItem id={attr} name={name} type={type} onChangeAttribute={onChangeAttribute} deleteAttributeButtonOnClick = {deleteAttributeButtonOnClick} disabled={false}/> \n    })\n    return (\n        <div>\n            <div style={{overflowY: \"scroll\", maxHeight:\"300px\"}}>\n                <AttributeListItem name='id' type='number' disabled={true} />\n                {attrArr}\n            </div>\n            <div className=\"modalAddNewAttributeButtonDiv\">\n                <PrimaryButton className=\"modalAddNewAttributeButton\" onClick={addAttributeButtonOnClick}  text=\"+ Attribute\" allowDisabledFocus />\n          </div>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport { useId } from '@uifabric/react-hooks';\nimport {\n  getTheme,\n  mergeStyleSets,\n  FontWeights,\n  DefaultButton,\n  Modal,\n  IconButton,\n  initializeIcons,\n  PrimaryButton,\n} from 'office-ui-fabric-react';\nimport {variableHandling} from './utils'\nimport AttributeList from './AttributeList'\nimport axios from 'axios'\nimport \"./componentCss/Modal.css\"\nimport AttributeListItem from './AttributeListItem';\n\n\nconst cancelIcon = { iconName: 'Cancel' };\n\nexport default ({id,data, RGName, hideModal, isModalOpen, onRouteGroupNameChange}) => {\n  initializeIcons('https://static2.sharepointonline.com/files/fabric/assets/icons/')\n  const findStartCount = (arrOfStrings) => {\n    let arrOfNumbers = arrOfStrings.map(ele => {\n      return Number(ele);\n    })\n    return Math.max(...arrOfNumbers);\n  }\n\n  const [count, setCount] = useState(Math.max(Object.keys(data))+1);\n  const [deletedAttr, setDeletedAttr] = useState([])\n  const [modalRGName, setModalRGName] = useState(RGName)\n  const [attributeListItemArr, setAttributeListItemArr] = useState(data);\n  const [userCreatedRG, setUserCreatedRG] = useState([])\n  useEffect( () => {\n    const startingCount = (findStartCount(Object.keys(data))) === -Infinity ? 0 : findStartCount(Object.keys(data));\n    setAttributeListItemArr(data)\n    setCount(startingCount + 1 || 0)\n    setModalRGName(RGName)\n    setDeletedAttr([])\n}, [data, RGName])\n\n  // Use useId() to ensure that the IDs are unique on the page.\n  // (It's also okay to use plain strings and manually ensure uniqueness.)\n  const titleId = useId('title');\n  const theme = getTheme();\n\nconst contentStyles = mergeStyleSets({\n  container: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'stretch',\n    width: '65%',\n    maxWidth: '921px'\n  },\n  header: [\n    theme.fonts.xLargePlus,\n    {\n      flex: '1 1 auto',\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\n      color: theme.palette.neutralPrimary,\n      display: 'flex',\n      alignItems: 'center',\n      fontWeight: FontWeights.semibold,\n      padding: '12px 12px 14px 24px',\n    },\n  ],\n  body: {\n    flex: '4 4 auto',\n    padding: '0 24px 24px 24px',\n    overflowY: 'hidden',\n    selectors: {\n      p: { margin: '14px 0' },\n      'p:first-child': { marginTop: 0 },\n      'p:last-child': { marginBottom: 0 },\n    },\n  },\n  footer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      margin: \"20px\"\n  }\n});\nconst iconButtonStyles = {\n  root: {\n    color: theme.palette.neutralPrimary,\n    marginLeft: 'auto',\n    marginTop: '4px',\n    marginRight: '2px',\n  },\n  rootHovered: {\n    color: theme.palette.neutralDark,\n  },\n};\n  const addAttributeButtonOnClick = () => {\n    const attributeListItemArrClone = JSON.parse(JSON.stringify(attributeListItemArr))\n    attributeListItemArrClone[count] = {\"name\":\"\", \"type\": \"\"};\n    setAttributeListItemArr(attributeListItemArrClone)\n    setCount(count + 1);\n  }\n\n  const onChangeAttribute = (id, name, type) => {\n    const attributeListItemArrClone = JSON.parse(JSON.stringify(attributeListItemArr))\n    attributeListItemArrClone[id] = {\"name\": variableHandling(name), \"type\": type };\n    setAttributeListItemArr(attributeListItemArrClone)\n  }\n\n  const deleteAttributeButtonOnClick = (id) => {\n    setDeletedAttr(prevState => [...prevState, id]);\n    const attributeListItemArrClone = JSON.parse(JSON.stringify(attributeListItemArr))\n    delete attributeListItemArrClone[id];\n    \n    setAttributeListItemArr(attributeListItemArrClone);\n  }\n\n  const onClickModalSave = async (rgName) => {\n    const userId = localStorage.getItem('userId');\n    const modifiedRgName = variableHandling(rgName);\n    const updatedRouteGroup = {\"userId\":userId, \"objectName\":modifiedRgName, \"apiId\":0, \"isCRUD\":true, \"isReadMultiple\":true, \"isReadAllObjects\":true, \"isSingleRoute\":true}\n    const objectId = id;\n    if(objectId >= 0 ){\n      onRouteGroupNameChange({\"id\":objectId, \"objectName\" : modifiedRgName, \"apiId\": 0, \"attributes\": attributeListItemArr})\n      await axios.post('/updateRouteGroup', {\"objectId\": objectId, \"updatedRouteGroup\": updatedRouteGroup})\n      await axios.post('/updateMultipleObjectAttributes', {userId, deletedAttr, objectId, \"attributes\": attributeListItemArr})\n    }else{\n      let addedRG = await axios.post(\"/addNewRouteGroup\", updatedRouteGroup);\n      const addedRGID = addedRG.data.objectId\n      onRouteGroupNameChange({\"id\":addedRGID, \"objectName\" : modifiedRgName, \"apiId\": 0, \"attributes\": attributeListItemArr})\n      await axios.post('/updateMultipleObjectAttributes', {userId, deletedAttr, \"objectId\":addedRGID, \"attributes\": attributeListItemArr})\n    }\n    hideModal();\n  }\n  \n\n  return (\n    <div>\n      <Modal\n        titleAriaId={titleId}\n        isOpen={isModalOpen}\n        onDismiss={hideModal}\n        isBlocking={true}\n        containerClassName={contentStyles.container}\n        dragOptions={false}\n      >\n        <div className={contentStyles.header}>\n          <input type=\"text\" id=\"routeGroupName\" className=\"modalRouteGroupTitle\" name=\"routeGroupName\" onChange={(e) => {setModalRGName(e.target.value)}} value={modalRGName} placeholder=\"Enter Route Group Name\" />\n          <IconButton\n            styles={iconButtonStyles}\n            iconProps={cancelIcon}\n            ariaLabel=\"Close popup modal\"\n            onClick={hideModal}\n          />\n        </div>\n        <hr />\n        <div className={contentStyles.body}>\n          <div className=\"modalAddNewAttributeList\">\n            <AttributeList attributeListItemArr={attributeListItemArr} onChangeAttribute={onChangeAttribute} addAttributeButtonOnClick={addAttributeButtonOnClick} deleteAttributeButtonOnClick={deleteAttributeButtonOnClick}/>\n          </div>\n        </div>\n        <hr />\n        <div className={contentStyles.footer}>\n            <PrimaryButton onClick={() => {onClickModalSave(modalRGName)}} className=\"modalAddNewAttributeSaveButton\" text=\"Save\" allowDisabledFocus /> \n            <DefaultButton text=\"Close\" allowDisabledFocus  onClick={hideModal} />\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\n","import React, {useState} from 'react'\nimport CurrentRouteGroupListItem from './CurrentRouteGroupsListItem'\nimport { PrimaryButton } from '@fluentui/react';\nimport { useBoolean } from '@uifabric/react-hooks';\nimport Modal from './Modal'\nimport './componentCss/CurrentRouteGroupsList.css'\n\nexport default ({onRouteGroupDelete, onRouteGroupNameChange, arrayOfRouteGroups}) => {\n    const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(false);\n    const [data, setData] = useState({})\n    const [RGName, setRGName] = useState(\"\");\n    const [id, setId] = useState(-1);\n    const [newRGCounter, setNewRGCounter] = useState(-1);\n\n    \n    const itemArrInfo = arrayOfRouteGroups.map(routeGroup => {\n        return <CurrentRouteGroupListItem id={routeGroup.id} onRouteGroupDelete={onRouteGroupDelete} setId={setId} setRGName={setRGName} data={routeGroup.attributes} RGName={routeGroup.objectName} setData={setData} showModal={showModal}/>\n    })\n    const addAttributeButtonOnClick = () => {\n        setRGName(\"\");\n        setData({})\n        setId(newRGCounter);\n        setNewRGCounter(newRGCounter - 1);\n        showModal();\n    }\n\n\n    return (\n        <div className=\"currentRouteGroupsListMainDiv\">\n            <ul className=\"currentRouteGroupsListUl\">\n                {itemArrInfo}\n            </ul>\n            <div className=\"currentRouteGroupsPrimaryButtonDiv\">\n                <PrimaryButton onClick={addAttributeButtonOnClick} className=\"currentRouteGroupsPrimaryButton\"> + Route Group</PrimaryButton>\n                <Modal id={id} onRouteGroupNameChange={onRouteGroupNameChange} data={data} RGName={RGName} showModal={showModal} hideModal={hideModal} isModalOpen={isModalOpen} />\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport CurrentRouteGroupsList from './CurrentRouteGroupsList';\nimport { Label } from '@fluentui/react';\nimport './componentCss/CurrentRouteGroups.css'\n\nexport default ({onRouteGroupDelete,onRouteGroupNameChange,arrayOfRouteGroups}) => {\n    return(\n        <div className=\"currentRouteGroupsMainDiv\">\n            <header>\n                <Label className=\"currentRouteGroupsLabel\">Route Groups</Label>\n            </header>\n            <div>\n                <CurrentRouteGroupsList  onRouteGroupDelete={onRouteGroupDelete} onRouteGroupNameChange={onRouteGroupNameChange} arrayOfRouteGroups={arrayOfRouteGroups}/>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport CurrentRouteGroups from './CurrentRouteGroups'\nimport {Image} from \"@fluentui/react\" \nimport './componentCss/ViewApiBody.css'\n\nexport default ({onRouteGroupDelete, onRouteGroupNameChange,arrayOfRouteGroups}) => {\n    return (\n        <div>\n            <div className=\"viewApiRGImageDiv\">\n                <Image \n                    src=\"static/react/images/step_2.png\"\n                    alt=\"Step Two\"\n                    width={'432px'}\n                    height={'576px'} \n                />\n                <div className=\"viewApiRGDiv\">\n                    <CurrentRouteGroups  onRouteGroupDelete={onRouteGroupDelete} onRouteGroupNameChange={onRouteGroupNameChange} arrayOfRouteGroups={arrayOfRouteGroups} />\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport { PrimaryButton, ChoiceGroup, initializeIcons } from '@fluentui/react';\nimport {generateFullAPI} from './utils'\nimport './componentCss/ViewApiFooter.css'\n\nexport default () => {\n    initializeIcons('https://static2.sharepointonline.com/files/fabric/assets/icons/')\n    const options = [\n        { key: 'flask', text: 'Flask', iconProps: { iconName: 'PythonLanguage' } },\n        { key: 'node', text: 'Node', iconProps: { iconName: 'JavaScriptLanguage' } },\n    ];\n\n    const [output, setOutput] = useState(\"flask\")\n    \n    const generateApiOnClick = () => {\n        generateFullAPI(output)\n    }\n\n    return (\n        <footer className=\"ViewApiFooter\">\n            <div>\n                <ChoiceGroup className=\"ViewApiFooterChoiceField\" defaultSelectedKey=\"flask\" options={options} onChange={(e, option) => {setOutput(option.key)}} />\n            </div>\n            <PrimaryButton className=\"ViewApiFooterPrimaryButton\" onClick={generateApiOnClick}> Generate Full API </PrimaryButton>\n        </footer>\n    )\n}","import React from 'react'\nimport ViewApiHeader from './ViewApiHeader'\nimport ViewApiBody from './ViewApiBody'\nimport ViewApiFooter from './ViewApiFooter'\n\n\nexport default ({setApiNameOnClick, setApiName,onRouteGroupDelete, onRouteGroupNameChange,arrayOfRouteGroups, apiName}) => {\n    return (\n        <div>\n            <ViewApiHeader setApiNameOnClick={setApiNameOnClick} setApiName={setApiName} apiName={apiName}/>\n            <ViewApiBody onRouteGroupDelete={onRouteGroupDelete} onRouteGroupNameChange={onRouteGroupNameChange} arrayOfRouteGroups={arrayOfRouteGroups}/>\n            <ViewApiFooter />\n        </div>\n    )\n}","import React from 'react';\nimport './componentCss/Navbar.css';\n\nexport default () => {\n  return (\n    <li className=\"navbarLiLogoImage\">\n    <img class=\"hide-text navbarImg\" id=\"logo-image\" src=\"static/react/images/API-Builder-Logo.png\" alt=\"logo_image\"></img>\n    </li>\n)};\n\n","import React from 'react';\nimport './componentCss/Navbar.css';\n\nexport default () => {\n  return (\n    <li className=\"navbarLiLogoText\"><a className=\"navbarLogoText\" href=\"#\" id=\"logo-text\">API Builder</a></li>\n)};\n\n","import React from 'react';\nimport './componentCss/Navbar.css';\n\nexport default () => {\n    const onBlogClick = () => {\n        alert('Blog coming soon!')\n    }\n    return (\n        <li className=\"navbarLi\" onClick={onBlogClick}><a className=\"navbarA\" href=\"#\" id=\"blog-link\">Blog</a></li>\n    )\n};\n\n","import React from 'react';\nimport { useId, useBoolean } from '@uifabric/react-hooks';\nimport './componentCss/Navbar.css';\nimport {\n  getTheme,\n  mergeStyleSets,\n  FontWeights,\n  Modal,\n  IconButton,\n} from 'office-ui-fabric-react';\n\nexport default () => {\n  const cancelIcon = { iconName: 'Cancel' };\n  const [isModalOpen, { setTrue: showModal, setFalse: hideModal }] = useBoolean(\n    false\n  );\n\n  // Use useId() to ensure that the IDs are unique on the page.\n  // (It's also okay to use plain strings and manually ensure uniqueness.)\n  const titleId = useId('title');\n  const onTutorialClick = () => {\n    showModal();\n  };\n\n  const theme = getTheme();\n  const contentStyles = mergeStyleSets({\n    container: {\n      display: 'flex',\n      flexFlow: 'column nowrap',\n      alignItems: 'stretch',\n      width: \"50%\",\n      maxWidth: '750px'\n    },\n    header: [\n      theme.fonts.xLargePlus,\n      {\n        flex: '1 1 auto',\n        borderTop: `4px solid ${theme.palette.themePrimary}`,\n        color: theme.palette.neutralPrimary,\n        display: 'flex',\n        alignItems: 'center',\n        fontWeight: FontWeights.semibold,\n        padding: '12px 12px 14px 24px',\n      },\n    ],\n    body: {\n      flex: '4 4 auto',\n      padding: '0 24px 24px 24px',\n      overflowY: 'hidden',\n      selectors: {\n        p: { margin: '14px 0' },\n        'p:first-child': { marginTop: 0 },\n        'p:last-child': { marginBottom: 0 },\n      },\n    },\n  });\n  const iconButtonStyles = {\n    root: {\n      color: theme.palette.neutralPrimary,\n      marginLeft: 'auto',\n      marginTop: '4px',\n      marginRight: '2px',\n    },\n    rootHovered: {\n      color: theme.palette.neutralDark,\n    },\n  };\n\n  return (\n    <div>\n      <li className=\"navbarLi\" onClick={onTutorialClick}>\n        <a className=\"navbarA\" href=\"#\" id=\"tutorial-link\">\n          Tutorial\n        </a>\n      </li>\n      <Modal\n        titleAriaId={titleId}\n        isOpen={isModalOpen}\n        onDismiss={hideModal}\n        isBlocking={false}\n        containerClassName={contentStyles.container}\n      >\n        <div className={contentStyles.header}>\n          <span id={titleId}>Tutorial</span>\n          <IconButton\n            styles={iconButtonStyles}\n            iconProps={cancelIcon}\n            ariaLabel=\"Close popup modal\"\n            onClick={hideModal}\n          />\n        </div>\n        <div className={contentStyles.body}>\n            <iframe id=\"tutorialVideo\"  width=\"100%\" height=\"378px\" src=\"https://www.youtube.com/embed/Tmj0Exbza30\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n        </div>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport './componentCss/Navbar.css';\n\nexport default () => {\n    const allApisClick = () => {\n        alert('All APIs Page coming soon!')\n    }\n  return (\n    <li className=\"navbarLi\" onClick={allApisClick}><a className=\"navbarA\" href=\"#\" id=\"apis-link\">APIs</a></li>\n)};\n\n","import React from 'react';\nimport './componentCss/Navbar.css';\nimport LogoImage from './LogoImage'\nimport LogoText from './LogoText'\nimport BlogLink from './BlogLink'\nimport TutorialLink from './TutorialLink'\nimport AllAPIsLink from './AllAPIsLink'\n\nexport default () => {\n  return (\n    <header className=\"NavbarHeader\">\n      <ul className=\"navbarUl\">\n        <div className=\"navbarLogoDiv\">\n          <LogoImage/>\n          <LogoText/>\n        </div>\n        <nav className=\"navbarNav\" id=\"navlinks\">\n            <BlogLink/>\n            <TutorialLink/>\n            <AllAPIsLink/>\n        </nav>\n      </ul>\n    </header>\n\n  );\n}\n\n","import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Landing from './Landing';\nimport ViewApi from './ViewApi';\nimport Navbar from './Navbar'\nimport {validateUser, grabFakeUser, variableHandling} from './utils'\nimport axios from 'axios'\n\nfunction App() {\n\n  const [arrayOfRouteGroups, setArrayOfRouteGroups] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [apiName, setApiName] = useState(\"\");\n  \n  useEffect (() => {\n    async function fetchRouteGroups() {\n      if(!await validateUser()){\n        await grabFakeUser();\n      }\n      let routes = await axios.post('/viewAvailableRouteGroups', {\"userId\": localStorage.getItem('userId')})\n      let currentApiName = await axios.post(\"/getAPIName\", {\"userId\": localStorage.getItem('userId')})\n      setApiName (currentApiName.data.api_name)\n      setArrayOfRouteGroups(routes.data.groups)\n      setIsLoading(false)\n    }\n    fetchRouteGroups()\n  }, [])\n\n  const onRouteGroupNameChange = async (RG) => {\n    const arrayOfRGClone = arrayOfRouteGroups.slice();\n    let foundRG = false;\n    arrayOfRGClone.forEach((routeGroup) =>{\n      if(routeGroup.id === RG.id ){\n        routeGroup.objectName = RG.objectName;\n        routeGroup.attributes = RG.attributes;\n        foundRG = true;\n      }\n    })\n    if(foundRG){\n      setArrayOfRouteGroups(arrayOfRGClone)\n    }else{\n      setArrayOfRouteGroups(prevState => \n        [...prevState, RG]\n      )\n    }\n  }\n\n  const onRouteGroupDelete = async (rgName) => {\n    const deletedRGInArray = arrayOfRouteGroups.filter(routeGroup => {\n      return routeGroup.objectName !== rgName\n    })\n    setArrayOfRouteGroups(deletedRGInArray)\n    // Need to find id from the db (any new RG added has a local id of -1)\n    let currentRoute = await axios.post(\"/getRouteGroup\", {\"userId\":localStorage.getItem('userId'), \"filters\": {\"objectName\":rgName}})\n    const currentRouteId = currentRoute.data.id;\n    await axios.post(\"/deleteRouteGroup\", {\"userId\": localStorage.getItem('userId'), \"objectId\":currentRouteId})\n  }\n\n  const setApiNameOnClick = async (newApiName) => {\n    await axios.post(\"/setAPIName\", {'userId': localStorage.getItem('userId'), \"apiName\": newApiName})\n  }\n\n  let renderedPage;\n  if(!isLoading){\n    if (apiName !== \"\"){\n      renderedPage = <ViewApi setApiNameOnClick={setApiNameOnClick} setApiName={setApiName} apiName={apiName} onRouteGroupDelete={onRouteGroupDelete} onRouteGroupNameChange={onRouteGroupNameChange} arrayOfRouteGroups={arrayOfRouteGroups}/>\n    }else{\n      renderedPage = <Landing setApiNameOnClick={setApiNameOnClick} apiName={apiName} setApiName={setApiName}/>\n    }\n  }\n  else{\n    renderedPage = <h1></h1>\n  }\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Navbar />\n          {renderedPage}\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}